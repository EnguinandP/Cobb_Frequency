fun (s : int) ->
  (let ((x_0 : bool)) = ((sizecheck : int -> bool) ((s : int) : int) : bool) in
   (match ((x_0 : bool) : bool) with
    | True -> ([] : int list)
    | False ->
        (let ((x_1 : bool)) =
           ((frequency_gen : unit -> bool) (() : unit) : bool) in
         ((match ((x_1 : bool) : bool) with
           | True -> ([] : int list)
           | False ->
               (let ((x_2 : int)) =
                  ((subs : int -> int) ((s : int) : int) : int) in
                (let ((x_3 : int list)) =
                   ((sized_list_gen : int -> int list) ((x_2 : int) : int) : 
                   int list) in
                 (let ((x_4 : int)) =
                    ((int_gen : unit -> int) (() : unit) : int) in
                  (((x_4 : int) : int) ::
                    ((x_3 : int list) : int list) : int list) : int list) : 
                  int list) : int list)) : int list) : int list) : int list) : 
  int list)